[{"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\index.js":"1","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\App.js":"2","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\reportWebVitals.js":"3","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\AppClass.js":"4","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\AppHooks.js":"5","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\components\\navbarMenu\\NavBarClassBootstrap.js":"6","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\components\\navMenue\\NavBarHookBootstrap.js":"7","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\home\\Home.js":"8","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\contact\\Contact.js":"9","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\about\\About.js":"10","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\PageNotFound\\PageNotFound.js":"11","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\createTask\\CreateTask.js":"12","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\retrieveTask\\RetrieveTask.js":"13","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\updateTask\\UpdateTask.js":"14","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\retrieveTaskDetail\\RetriveTaskDetail.js":"15","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\home\\Home.js":"16","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\about\\About.js":"17","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\contact\\Contact.js":"18","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\pageNotFound\\PageNotFound.js":"19","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskRetrieve\\TaskRetrieve.js":"20","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskCreate\\TaskCreate.js":"21","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskUpdate\\TaskUpdate.js":"22","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskRetrieveDetail\\TaskRetriveDetail.js":"23","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\taskForm\\FormTask2stateNestedState.js":"24","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskForm\\TaskForm1state.js":"25","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\constants\\customHooks\\customHooks.js":"26"},{"size":500,"mtime":1614681087101,"results":"27","hashOfConfig":"28"},{"size":384,"mtime":1618191140976,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":1646,"mtime":1617691270621,"results":"31","hashOfConfig":"28"},{"size":1734,"mtime":1617692941843,"results":"32","hashOfConfig":"28"},{"size":1856,"mtime":1613966423849,"results":"33","hashOfConfig":"28"},{"size":1660,"mtime":1614688955105,"results":"34","hashOfConfig":"28"},{"size":313,"mtime":1617690391137,"results":"35","hashOfConfig":"28"},{"size":341,"mtime":1617690378059,"results":"36","hashOfConfig":"28"},{"size":384,"mtime":1617690369645,"results":"37","hashOfConfig":"28"},{"size":268,"mtime":1617691203763,"results":"38","hashOfConfig":"28"},{"size":844,"mtime":1617690683320,"results":"39","hashOfConfig":"28"},{"size":4829,"mtime":1618159073045,"results":"40","hashOfConfig":"28"},{"size":1243,"mtime":1617690743425,"results":"41","hashOfConfig":"28"},{"size":4404,"mtime":1618159166629,"results":"42","hashOfConfig":"28"},{"size":170,"mtime":1617691888416,"results":"43","hashOfConfig":"28"},{"size":276,"mtime":1617691871605,"results":"44","hashOfConfig":"28"},{"size":243,"mtime":1617691883468,"results":"45","hashOfConfig":"28"},{"size":268,"mtime":1617691203763,"results":"46","hashOfConfig":"28"},{"size":4565,"mtime":1617694263954,"results":"47","hashOfConfig":"28"},{"size":653,"mtime":1617693093745,"results":"48","hashOfConfig":"28"},{"size":1203,"mtime":1617692808023,"results":"49","hashOfConfig":"28"},{"size":3882,"mtime":1617692798942,"results":"50","hashOfConfig":"28"},{"size":14714,"mtime":1618158876012,"results":"51","hashOfConfig":"28"},{"size":16112,"mtime":1618027050693,"results":"52","hashOfConfig":"28"},{"size":693,"mtime":1617692826048,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"109fe8e",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\index.js",[],["112","113"],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\App.js",["114"],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\reportWebVitals.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\AppClass.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\AppHooks.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\components\\navbarMenu\\NavBarClassBootstrap.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\components\\navMenue\\NavBarHookBootstrap.js",["115"],"import React from 'react'\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { NavLink, withRouter } from \"react-router-dom\"\r\nimport style from './NavBarHookBootstrap.module.css'\r\n\r\nfunction NavBarHookBootstrap() {\r\n    return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className={style.navbarSticky}>\r\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink className=\"nav-link\" exact to=\"/\">Home</NavLink>\r\n                        <NavLink className=\"nav-link\" exact to=\"/about\">About</NavLink>\r\n                        <NavLink className=\"nav-link\" exact to=\"/contact\">Contact</NavLink>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <NavDropdown title=\"Action\" className={style.nav_dropdown} id=\"collasible-nav-dropdown\">\r\n                            <NavDropdown.Item><NavLink exact to=\"/task/retrieve\">Retrieve Task</NavLink></NavDropdown.Item>\r\n                            {/* <div onClick={()=>props.history.push(\"/tasks/list\")} >tasklist</div>    */}\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item><NavLink exact to=\"/task/create\">Create Task</NavLink></NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NavBarHookBootstrap\r\n","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\home\\Home.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\contact\\Contact.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\about\\About.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\PageNotFound\\PageNotFound.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\createTask\\CreateTask.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\retrieveTask\\RetrieveTask.js",["116","117","118"],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\updateTask\\UpdateTask.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\retrieveTaskDetail\\RetriveTaskDetail.js",["119","120","121","122","123","124"],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\home\\Home.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\about\\About.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\contact\\Contact.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\pageNotFound\\PageNotFound.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskRetrieve\\TaskRetrieve.js",["125","126","127"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport style from './TaskRetrieve.module.css'\r\n\r\nfunction TaskRetrieve(props) {\r\n    // // ----------Localization hooks & Router Hooks-------------\r\n    const history = useHistory()\r\n\r\n\r\n    // // ----------Props & context & ref ------------------------------\r\n\r\n\r\n\r\n\r\n    // // ----------hooks useState--------------------------------------------------\r\n    const [tasks, setTask] = useState([]);\r\n    const [tableHeaderLocation, setTableHeaderLocation] = useState(\"right\")\r\n\r\n\r\n    // // ----------hooks useEffect--------------------------------------------------\r\n    useEffect(() => {\r\n        loadTask();\r\n    }, []);\r\n\r\n    const loadTask = async () => {\r\n        var taskdataLocalStorage = localStorage.getItem('taskList');\r\n        let tasksLocalStorage = JSON.parse(taskdataLocalStorage)\r\n        // setTask(tasks.reverse());\r\n        setTask(tasksLocalStorage);\r\n    };\r\n\r\n    \r\n    // // ----------handler functions--------------------------------------------------\r\n    const handleDeleteTask = taskID => {\r\n        let filteredTask = tasks.filter(tasks => tasks.id !== taskID)\r\n        setTask(filteredTask)\r\n        localStorage.setItem('taskList', JSON.stringify(filteredTask))\r\n    };\r\n\r\n    const handleEditTask = (task) => {\r\n        let testB = { Key1: \"value1\", Key2: \"value2\" } // only for test not use in application\r\n        // // 1st way using props.history\r\n        // props.history.push(`/task/update/${task.id}`, {\r\n        //     task: task,\r\n        //     testB: testB\r\n        // })\r\n        // // 2nd way ==>using useHistory hooks\r\n        history.push(`/task/update/${task.id}`, {\r\n            task: task,\r\n            testB: testB\r\n        })\r\n    }\r\n\r\n    const handleTaskDetail = (tasks, task) => {\r\n        // // 1st way using props.history\r\n        props.history.push(`/task/detail/${task.id}`, {\r\n            tasks: tasks, // total task list\r\n            task: task   // single task\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"py-4\">\r\n                    <h1>Task List with Horizental Header</h1>\r\n                    {tasks != null && tasks.length > 0 ?\r\n                        <table className={allClass(\"table border shadow\", style.table_hooks", mdl)}>\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">Sr.NO.</th>\r\n                                    <th scope=\"col\">ID</th>\r\n                                    <th scope=\"col\">Date</th>\r\n                                    <th scope=\"col\">Title</th>\r\n                                    <th scope=\"col\">Description</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {tasks.map((task, index) => (\r\n                                    <tr key={task.id}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{task.id}</td>\r\n                                        <td>{task.date}</td>\r\n                                        <td>{task.title}</td>\r\n                                        <td>{task.description}</td>\r\n                                        <td>\r\n                                        <button className={allClass(\"btn btn-outline-primary mr-2\",style.buttonStyl ", mdl)} onClick={(e) => handleTaskDetail(tasks, task)} >Detail</button>\r\n                                            <button className={allClass(\"btn btn-warning\",style.buttonStyl ", mdl)} onClick={(e) => handleEditTask(task)} > Edit </button>\r\n                                            {/* <Link to={`/task/update/${task.id}/${task.date}/${task.title}/${task.description}`} type=\"button\" className=\"btn btn-warning\">Edit </Link>  */}\r\n                                            <button className={allClass(\"btn btn-danger\",style.buttonStyl ", mdl)}  onClick={(e) => handleDeleteTask(task.id)} > Delete </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        : <h5>Task is not available.</h5>}\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TaskRetrieve\r\n","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskCreate\\TaskCreate.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskUpdate\\TaskUpdate.js",["128"],"import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport TaskForm1state from '../taskForm/TaskForm1state';\r\n\r\nfunction TaskUpdate(props) {\r\n    // console.log(\"In porps params is available & by using useParams hooks we can get params\",props)\r\n    const params = useParams();\r\n    var taskId = params.id\r\n\r\n    // // // (to use different way should check Route in AppHooks.js & TaskRetrieve.js)\r\n    // // // 1st way => taking task data => using react router \r\n    let taskField = props.location.state.task\r\n    console.log(props.location.state)\r\n\r\n    // // // 2nd way => taking task data =>using id find data in local storage\r\n    // const data = localStorage.getItem('taskList')\r\n    // const tasks = JSON.parse(data)\r\n    // let taskField = tasks.find(task => task.id === taskId)\r\n\r\n    // // // 3rd way ==> taking task data ==> passing all data in url\r\n    // let taskField = params\r\n\r\n    let isTaskUpdate = true\r\n    return (\r\n        <div>\r\n            <div className=\"App\">\r\n                <h1>Edit Task</h1>\r\n                <TaskForm1state taskField={taskField} isTaskUpdate={isTaskUpdate} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskUpdate\r\n","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskRetrieveDetail\\TaskRetriveDetail.js",[],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\class\\containers\\pages\\tasks\\taskForm\\FormTask2stateNestedState.js",["129","130","131","132","133","134"],"D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\containers\\pages\\tasks\\taskForm\\TaskForm1state.js",["135"],"import React, { useState } from 'react'\r\nimport style from \"./TaskForm.module.css\"\r\nimport { useHistory, Link } from \"react-router-dom\"\r\nimport { useStateCallback } from \"../../../../constants/customHooks/customHooks\"\r\n\r\n\r\nfunction TaskForm1state(props) {\r\n    // // ----------Localization hooks & Router Hooks-------------\r\n    let history = useHistory()\r\n\r\n    // // ----------Props & context & ref ------------------------------\r\n    const taskField = props.taskField\r\n    const isTaskUpdate = props.isTaskUpdate\r\n    var formEdit\r\n    if (isTaskUpdate === true) {\r\n        formEdit = true\r\n    } else {\r\n        formEdit = false\r\n    }\r\n\r\n\r\n    // // geting array from local storage\r\n    var data = localStorage.getItem('taskList')\r\n    var taskData\r\n    if (data == null) {\r\n        taskData = [];\r\n    }\r\n    else if (data === \"[]\") {\r\n        taskData = [];\r\n    }\r\n    else {\r\n        taskData = JSON.parse(data)\r\n    }\r\n\r\n    // // ----------hooks useState--------------------------------------------------\r\n    const [task, setTask] = useStateCallback(taskField);\r\n    const [err, setErr] = useState({})\r\n\r\n\r\n    // // ----------hooks useEffect--------------------------------------------------\r\n\r\n    \r\n    // // ----------handler functions--------------------------------------------------\r\n    const { id, date, title, description, technology, library } = task;\r\n    const { idErr, titleErr, uiTechErr, backEndTechErr, } = err\r\n    const handleInputChange = e => {\r\n        if (e.target.type === \"checkbox\") {\r\n            // // // ### 1st way to update nested state ###\r\n            let updatedTask = { ...task }\r\n            updatedTask.library[e.target.name] = !updatedTask.library[e.target.name]\r\n            setTask({ ...updatedTask })\r\n\r\n            // // // ### 2nd way to update nested state###\r\n            // task.library[e.target.name] = !task.library[e.target.name] // only state will change but page will not rerender\r\n            // setTask(prevState => ({ ...prevState }))                   // to rerender page\r\n            const nameForm = e.target.name\r\n            formValidation(task, nameForm);\r\n\r\n            // // // ### 3rd way to update nested state###\r\n            // setTask(prevState => ({\r\n            //     ...prevState,\r\n            //     library: {\r\n            //         ...prevState.library,\r\n            //         [e.target.name]: !prevState.library[e.target.name]\r\n            //     }\r\n            // }),\r\n            //     task => {\r\n            //         const nameForm = e.target.name\r\n            //         formValidation(task, nameForm);\r\n            //     })\r\n        }\r\n        else if (e.target.type === \"select-one\" || e.target.type === \"radio\") {\r\n            // // // ###1st way to update nested state###\r\n            let updatedTask = { ...task }\r\n            updatedTask.technology[e.target.name] = e.target.value\r\n            setTask({ ...updatedTask })\r\n\r\n            // // // ###2nd way to update nested state###\r\n            // task.technology[e.target.name] = e.target.value // only state will change but page will not rerender\r\n            // setTask(prevState => ({ ...prevState }))        // to rerender page\r\n\r\n            // // // ###3rd way to update nested state###\r\n            // setTask(prevState => ({\r\n            //     ...prevState,\r\n            //     technology: {\r\n            //         ...prevState.technology,\r\n            //         [e.target.name]: e.target.value\r\n            //     }\r\n            // }),\r\n            //     task => {\r\n            //         const nameForm = e.target.name\r\n            //         formValidation(task, nameForm);\r\n            //     })\r\n\r\n\r\n            const nameForm = e.target.name\r\n            formValidation(task, nameForm);\r\n        }\r\n        else {\r\n            // // trimStart() === trimLeft()  &and& trimEnd() === trimRight()\r\n            setTask({ ...task, [e.target.name]: e.target.value.trimLeft() },\r\n                task => {\r\n                    const nameForm = e.target.name\r\n                    formValidation(task, nameForm);\r\n                })\r\n        }\r\n    };\r\n\r\n\r\n    const handleCreateTask = (e) => {\r\n        const nameFormList = [\"id\", \"title\", \"uiTech\", \"backEndTech\"]\r\n        nameFormList.forEach((nameForm) => {\r\n            formValidation(task, nameForm)\r\n        })\r\n        if (id && title && technology.uiTech && technology.backEndTech && !idErr && !titleErr && !uiTechErr && !backEndTechErr) {\r\n            taskData.push(task);\r\n            localStorage.setItem('taskList', JSON.stringify(taskData))\r\n            history.push(`/task/retrieve`);\r\n        }\r\n    }\r\n\r\n    const handleUpdateTask = (e) => {\r\n        if (id && title && technology.uiTech && technology.backEndTech && !idErr && !titleErr && !uiTechErr && !backEndTechErr) {\r\n            const editedtast = taskData.map(taskArg => {\r\n                if (taskArg.id === task.id) {\r\n                    return task\r\n                }\r\n                return taskArg\r\n            })\r\n            localStorage.setItem('taskList', JSON.stringify(editedtast))\r\n            history.push(`/task/retrieve`);\r\n        }\r\n    }\r\n\r\n    const handleResetTask = () => {\r\n        // // 1st way to update nested state.\r\n        setTask({\r\n            id: \"\",\r\n            date: \"\",\r\n            title: \"\",\r\n            description: \"\",\r\n            technology: { uiTech: \"\", backEndTech: \"\" },\r\n            library: { redux: false, saga: false, numpy: false, pandas: false },\r\n        })\r\n        setErr({\r\n            idErr: \"\",\r\n            titleErr: \"\",\r\n            uiTechErr: \"\",\r\n            backEndTechErr: \"\",\r\n        })\r\n\r\n\r\n        // // // ###2nd way to update nested state###\r\n        // task.id = \"\"\r\n        // task.date = \"\"\r\n        // task.title = \"\"\r\n        // task.description = \"\"\r\n        // task.technology = { uiTech: \"\", backEndTech: \"\" }\r\n        // task.library = { redux: false, saga: false, numpy: false, pandas: false }\r\n        // err.idErr = \"\"\r\n        // err.titleErr = \"\"\r\n        // err.uiTechErr = \"\"\r\n        // err.backEndTechErr = \"\"\r\n        // setTask(prevState => ({ ...prevState }))\r\n    }\r\n\r\n    const formValidation = (task, nameForm) => {\r\n        switch (nameForm) {\r\n            // // id validation\r\n            case 'id':\r\n                let idErr = \"\"\r\n                const idValue = task.id\r\n                if (idValue === \"\" || null) {\r\n                    idErr = \"ID must not be empty\"\r\n                }\r\n                else if (idValue.trim().length < 3) {\r\n                    idErr = 'Id must be at least 3 characters!'\r\n                }\r\n                else {\r\n                    idErr = \"\"\r\n                }\r\n\r\n                // // ###1st way to update state in loop (here forEach loop)###\r\n                err.idErr = idErr\r\n                setTask(prevState => ({ ...prevState }))\r\n\r\n                // // ###2nd way to update state in loop (here forEach loop)###\r\n                // setErr(prevState => ({ ...prevState, idErr: idErr })) // useState hook if we update errState normaly in loop then only last state will update \r\n                break;\r\n\r\n            // // title validation\r\n            case 'title':\r\n                let titleErr = \"\"\r\n                const regExp = /^[0-9a-zA-Z ]+$/\r\n                const titleValue = task.title\r\n                if (titleValue.trim() === \"\") {\r\n                    titleErr = \"Title must not be empty\"\r\n                }\r\n                else {\r\n                    if (titleValue.match(regExp)) {\r\n                        if (titleValue.trim().length < 5) {\r\n                            titleErr = \"Title must contain at least 5 characters\"\r\n                        }\r\n                        else if (titleValue.trim().length > 15) {\r\n                            titleErr = \"Title must not exceed 15 characters\"\r\n                        }\r\n                        else {\r\n                            titleErr = \"\"\r\n                        }\r\n                    }\r\n                    else {\r\n                        titleErr = 'Title must not contain any symbols'\r\n                    }\r\n                }\r\n\r\n                // // ###1st way to update state in loop (here forEach loop)###\r\n                err.titleErr = titleErr\r\n                setTask(prevState => ({ ...prevState }))\r\n\r\n                // // ###2nd way to update state in loop (here forEach loop)###\r\n                // setErr(prevState => ({ ...prevState, titleErr: titleErr })) // useState hook if we update errState normaly in loop then only last state will update \r\n                break;\r\n\r\n            case \"uiTech\":\r\n                let uiTechErr = \"\"\r\n                const uiTechValue = task.technology.uiTech\r\n                if (uiTechValue === \"\") {\r\n                    uiTechErr = \"Select UI Technology.\"\r\n                }\r\n                else {\r\n                    uiTechErr = \"\"\r\n                }\r\n                // // ###1st way to update state in loop (here forEach loop)###\r\n                err.uiTechErr = uiTechErr\r\n                setTask(prevState => ({ ...prevState }))\r\n\r\n                // // ###2nd way to update state in loop (here forEach loop)###\r\n                // setErr(prevState => ({ ...prevState, uiTechErr: uiTechErr })) // useState hook if we update errState normaly in loop then only last state will update \r\n                break\r\n\r\n            case \"backEndTech\":\r\n                let backEndTechErr = \"\"\r\n                const backEndTechValue = task.technology.backEndTech\r\n                if (backEndTechValue === \"\") {\r\n                    backEndTechErr = \"Select Back End Technology.\"\r\n                }\r\n                else {\r\n                    backEndTechErr = \"\"\r\n                }\r\n                // // ###1st way to update state in loop (here forEach loop)###\r\n                err.backEndTechErr = backEndTechErr\r\n                setTask(prevState => ({ ...prevState }))\r\n\r\n                // // ###2nd way to update state in loop (here forEach loop)###\r\n                // setErr(prevState => ({ ...prevState, backEndTechErr: backEndTechErr })) // useState hook if we update errState normaly in loop then only last state will update \r\n                break\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <form name=\"myForm\" className={style.formStyle}>\r\n                <div>\r\n                    <div className={allClass(style.formField, style.col", mdl)}>\r\n                        <label className={style.formLable} >Task id:</label>\r\n                        <input disabled={formEdit} type=\"text\" name=\"id\" value={id} onChange={e => handleInputChange(e)} className={allClass(\"text-field\", style.formInput", mdl)} placeholder=\"Enter task ID\" /><br></br>\r\n                    </div>\r\n                    <small style={{ color: \"red\" }}>{idErr}</small>\r\n                </div>\r\n\r\n                <div className={allClass(style.formField, style.col", mdl)}>\r\n                    <label className={style.formLable} >Date:</label>\r\n                    <input type=\"date\" name=\"date\" value={date} onChange={e => handleInputChange(e)} className={allClass(\"text-field\", style.formInput", mdl)} />\r\n                </div>\r\n\r\n                <div>\r\n                    <div className={allClass(style.formField, style.col", mdl)}>\r\n                        <label className={style.formLable}>Task Title:</label>\r\n                        <input type=\"text\" name=\"title\" value={title} onChange={e => handleInputChange(e)} className={allClass(\"text-field\", style.formInput", mdl)} placeholder=\"Enter Task Title.\" />\r\n                    </div>\r\n                    <small style={{ color: \"red\" }}>{titleErr}</small>\r\n                </div>\r\n                <div className={allClass(style.formField, style.col", mdl)}>\r\n                    <label className={style.formLable} >Task description :</label>\r\n                    <textarea rows=\"6\" cols=\"30\" name=\"description\" value={description} onChange={e => handleInputChange(e)} className={allClass(\"text-field\", style.formInput", mdl)} />\r\n                </div>\r\n                <div>\r\n                    <div className={allClass(style.formField, style.col", mdl)} >\r\n                        <div className={style.formLable}  >UI Technology:</div>\r\n                        <select name='uiTech' value={technology.uiTech} onChange={e => handleInputChange(e)} className=\"form-dropdown text-field\">\r\n                            <option value=\"\" > Select </option>\r\n                            <option value=\"react\" > React </option>\r\n                            <option value=\"angular\"> Angular </option>\r\n                            <option value=\"flutter\"> Flutter </option>\r\n                            <option value=\"vue.js\"> Vue.js </option>\r\n                        </select>\r\n                    </div>\r\n                    <small style={{ color: \"red\" }}>{uiTechErr}</small>\r\n                </div>\r\n                <div>\r\n                    <div className={allClass(style.formField, style.col", mdl)}>\r\n                        <div className={style.formLable} >Back-End Technology :</div>\r\n                        <label className={style.formBackEndLabel}>Python\r\n                            <input type=\"radio\" name=\"backEndTech\" value=\"python\" onChange={e => handleInputChange(e)} checked={technology.backEndTech === 'python'} />\r\n                        </label>\r\n                        <label className={style.formBackEndLabel}>.NET\r\n                            <input type=\"radio\" name=\"backEndTech\" value=\".net\" onChange={e => handleInputChange(e)} checked={technology.backEndTech === '.net'} />\r\n                        </label>\r\n                        <label className={style.formBackEndLabel}>PHP\r\n                            <input type=\"radio\" name=\"backEndTech\" value=\"php\" onChange={e => handleInputChange(e)} checked={technology.backEndTech === 'php'} />\r\n                        </label >\r\n                    </div>\r\n                    <small style={{ color: \"red\" }}>{backEndTechErr}</small>\r\n                </div>\r\n                <div className={allClass(style.formField, style.col", mdl)}>\r\n                    <div className={style.formLable} >Library Used:</div>\r\n                    <label className={style.formLibraryLabel}>Redux<input type=\"checkbox\" name=\"redux\" onChange={e => handleInputChange(e)} checked={task.library.redux} /> </label>\r\n                    <label className={style.formLibraryLabel}>Saga<input type=\"checkbox\" name=\"saga\" onChange={e => handleInputChange(e)} checked={task.library.saga} /> </label>\r\n                    <label className={style.formLibraryLabel}>Numpy<input type=\"checkbox\" name=\"numpy\" onChange={e => handleInputChange(e)} checked={task.library.numpy} /> </label>\r\n                    <label className={style.formLibraryLabel}>Pandas<input type=\"checkbox\" name=\"pandas\" onChange={e => handleInputChange(e)} checked={task.library.pandas} /></label>\r\n                </div>\r\n\r\n                {formEdit === false ?\r\n                    <div className=\"field-btn\">\r\n                        <button type='button' onClick={event => handleCreateTask(event)} className={allClass(\"btn btn-success\", style.buttonStyl", mdl)}>AddTask</button>\r\n                        <button type=\"reset\" onClick={event => handleResetTask(event)} className={allClass(\"btn btn-secondary\", style.buttonStyl", mdl)} >Reset</button>\r\n                        <Link to={`/task/retrieve`} type=\"button\" className={allClass(\"btn btn-outline-primary mr-2\", style.buttonStyl", mdl)}>Cancel </Link>\r\n                    </div>\r\n                    :\r\n                    <div className=\"field-btn\">\r\n                        <button type='button' onClick={event => handleUpdateTask(event)} className={allClass(\"btn btn-warning\", style.buttonStyl", mdl)}>Update Task</button>\r\n                        <Link to={`/task/retrieve`} type=\"button\" className={allClass(\"btn btn-outline-primary mr-2\", style.buttonStyl", mdl)}>Cancel </Link>\r\n                    </div>\r\n                }\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskForm1state\r\n","D:\\Bharat-Programming\\EtevaBharat\\Eteva-task\\react\\ReactJS\\201229-react-todo-app-class-hooks-localstorage\\src\\hooks\\constants\\customHooks\\customHooks.js",["136"],"import React, { useState, useRef, useCallback, useEffect } from 'react'\r\n\r\nexport const useStateCallback = (initialState) => {\r\n  const [state, setState] = useState(initialState);\r\n  const cbRef = useRef(null); // mutable ref to store current callback\r\n  const setStateCallback = useCallback((state, cb) => {\r\n    cbRef.current = cb; // store passed callback to ref\r\n    setState(state);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // cb.current is `null` on initial render, so we only execute cb on state *updates*\r\n    if (cbRef.current) {\r\n      cbRef.current(state);\r\n      cbRef.current = null; // reset callback after execution\r\n    }\r\n  }, [state]);\r\n  return [state, setStateCallback];\r\n}\r\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":16},{"ruleId":"141","severity":1,"message":"145","line":3,"column":19,"nodeType":"143","messageId":"144","endLine":3,"endColumn":29},{"ruleId":"141","severity":1,"message":"146","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":14},{"ruleId":"141","severity":1,"message":"147","line":75,"column":24,"nodeType":"143","messageId":"144","endLine":75,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":110,"column":35,"nodeType":"150","messageId":"151","endLine":110,"endColumn":37},{"ruleId":"141","severity":1,"message":"152","line":15,"column":17,"nodeType":"143","messageId":"144","endLine":15,"endColumn":19},{"ruleId":"141","severity":1,"message":"153","line":15,"column":21,"nodeType":"143","messageId":"144","endLine":15,"endColumn":25},{"ruleId":"141","severity":1,"message":"154","line":15,"column":27,"nodeType":"143","messageId":"144","endLine":15,"endColumn":32},{"ruleId":"141","severity":1,"message":"155","line":15,"column":34,"nodeType":"143","messageId":"144","endLine":15,"endColumn":45},{"ruleId":"141","severity":1,"message":"156","line":15,"column":47,"nodeType":"143","messageId":"144","endLine":15,"endColumn":57},{"ruleId":"141","severity":1,"message":"157","line":57,"column":59,"nodeType":"143","messageId":"144","endLine":57,"endColumn":66},{"ruleId":"141","severity":1,"message":"146","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"158","line":17,"column":12,"nodeType":"143","messageId":"144","endLine":17,"endColumn":31},{"ruleId":"141","severity":1,"message":"159","line":17,"column":33,"nodeType":"143","messageId":"144","endLine":17,"endColumn":55},{"ruleId":"141","severity":1,"message":"160","line":8,"column":9,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"141","severity":1,"message":"153","line":100,"column":28,"nodeType":"143","messageId":"144","endLine":100,"endColumn":32},{"ruleId":"141","severity":1,"message":"155","line":100,"column":34,"nodeType":"143","messageId":"144","endLine":100,"endColumn":45},{"ruleId":"141","severity":1,"message":"157","line":100,"column":59,"nodeType":"143","messageId":"144","endLine":100,"endColumn":66},{"ruleId":"141","severity":1,"message":"153","line":112,"column":28,"nodeType":"143","messageId":"144","endLine":112,"endColumn":32},{"ruleId":"141","severity":1,"message":"155","line":112,"column":34,"nodeType":"143","messageId":"144","endLine":112,"endColumn":45},{"ruleId":"141","severity":1,"message":"157","line":112,"column":59,"nodeType":"143","messageId":"144","endLine":112,"endColumn":66},{"ruleId":"141","severity":1,"message":"157","line":44,"column":55,"nodeType":"143","messageId":"144","endLine":44,"endColumn":62},{"ruleId":"141","severity":1,"message":"161","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":13},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'AppHooks' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Link' is defined but never used.","'nullData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","'date' is assigned a value but never used.","'title' is assigned a value but never used.","'description' is assigned a value but never used.","'technology' is assigned a value but never used.","'library' is assigned a value but never used.","'tableHeaderLocation' is assigned a value but never used.","'setTableHeaderLocation' is assigned a value but never used.","'taskId' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]